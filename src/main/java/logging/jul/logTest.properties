############################################################
#  	logTest - Logging Configuration File
############################################################

# handlers= java.util.logging.ConsoleHandler
# Enhancing more than one handlers.
handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
#.level= INFO
# changing the common level for all handlers then we could get lower in for each handler.
.level= ALL

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################

# default file output is in user's home directory.
#java.util.logging.FileHandler.pattern = %h/java%u.log
# Replacing and renaming a file for logs collecting. The path starts at the project root.
java.util.logging.FileHandler.pattern = src/main/java/logging/jul/myJavaUtilLogger.log
java.util.logging.FileHandler.limit = 50000
java.util.logging.FileHandler.count = 1
# Getting unactivated the default logging formatter.
#java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter

# Limit the message that are printed on the console to INFO and above.
#java.util.logging.ConsoleHandler.level = INFO
# Setting the common ALL level for a separated handler.
java.util.logging.ConsoleHandler.level = ALL
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# Replacing the common ALL level to FINE level for a separated handler.
java.util.logging.FileHandler.level = FINE
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter

# Example to customize the SimpleFormatter output format 
# to print one-line log message like this:
#     <level>: <log message> [<date/time>]
#
# Changing logging format.
java.util.logging.SimpleFormatter.format=%4$s: %5$s [%1$tc]%n
# Read about java.util.logging.SimpleFormatter.format at
# https://docs.oracle.com/javase/7/docs/api/java/util/logging/SimpleFormatter.html
# https://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#syntax
# %1$s - Fri Sep 20 09:28:01 MSK 2019
# %2$s - logging.JavaUtilLogger main
# %3$s - logging.JavaUtilLogger
# %5$s - FINEST Level:
# %1$tc - ѕт сен 20 09:30:01 MSK 2019
# %n - enter(to the next line)

############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################

# For example, set the com.xyz.foo logger to only log SEVERE
# messages:
com.xyz.foo.level = SEVERE
